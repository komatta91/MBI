Index.PACKAGES = {"pl.edu.pw.elka.mbi" : [{"name" : "pl.edu.pw.elka.mbi.Main", "shortDescription" : "", "object" : "pl\/edu\/pw\/elka\/mbi\/Main$.html", "members_object" : [{"label" : "performanceTest", "tail" : "(args: Array[String]): Unit", "member" : "pl.edu.pw.elka.mbi.Main.performanceTest", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#performanceTest(args:Array[String]):Unit", "kind" : "def"}, {"label" : "run", "tail" : "(args: Array[String], rhmAlgorithm: (RHMClassifier, DataFrame) ⇒ Set[String], rhmIterations: Int): Unit", "member" : "pl.edu.pw.elka.mbi.Main.run", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#run(args:Array[String],rhmAlgorithm:(pl.edu.pw.elka.mbi.rhm.RHMClassifier,org.apache.spark.sql.DataFrame)=>Set[String],rhmIterations:Int):Unit", "kind" : "def"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "pl.edu.pw.elka.mbi.Main.main", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "strictAlgorithm", "tail" : ": (RHMClassifier, DataFrame) ⇒ Set[String]", "member" : "pl.edu.pw.elka.mbi.Main.strictAlgorithm", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#strictAlgorithm:(pl.edu.pw.elka.mbi.rhm.RHMClassifier,org.apache.spark.sql.DataFrame)=>Set[String]", "kind" : "val"}, {"label" : "laxAlgorithm", "tail" : ": (RHMClassifier, DataFrame) ⇒ Set[String]", "member" : "pl.edu.pw.elka.mbi.Main.laxAlgorithm", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#laxAlgorithm:(pl.edu.pw.elka.mbi.rhm.RHMClassifier,org.apache.spark.sql.DataFrame)=>Set[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/Main$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "pl.edu.pw.elka.mbi.MultiFileIterator", "shortDescription" : "Extension of the VCFFileReader utility from htsjdk library.", "object" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html", "members_class" : [{"label" : "hasNext", "tail" : "(): Boolean", "member" : "pl.edu.pw.elka.mbi.MultiFileIterator.hasNext", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#hasNext():Boolean", "kind" : "def"}, {"label" : "next", "tail" : "(): VariantContext", "member" : "pl.edu.pw.elka.mbi.MultiFileIterator.next", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#next():htsjdk.variant.variantcontext.VariantContext", "kind" : "def"}, {"label" : "close", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.MultiFileIterator.close", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#close():Unit", "kind" : "def"}, {"label" : "sortedColumnSet", "tail" : ": List[String]", "member" : "pl.edu.pw.elka.mbi.MultiFileIterator.sortedColumnSet", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#sortedColumnSet:List[String]", "kind" : "val"}, {"label" : "iteratorList", "tail" : ": ListBuffer[CloseableIterator[VariantContext]]", "member" : "pl.edu.pw.elka.mbi.MultiFileIterator.iteratorList", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#iteratorList:scala.collection.mutable.ListBuffer[htsjdk.samtools.util.CloseableIterator[htsjdk.variant.variantcontext.VariantContext]]", "kind" : "val"}, {"label" : "stream", "tail" : "(): Stream[VariantContext]", "member" : "htsjdk.samtools.util.CloseableIterator.stream", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#stream():java.util.stream.Stream[T]", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[VariantContext]", "member" : "htsjdk.samtools.util.CloseableIterator.toList", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#toList():java.util.List[T]", "kind" : "def"}, {"label" : "forEachRemaining", "tail" : "(arg0: Consumer[_ >: VariantContext]): Unit", "member" : "java.util.Iterator.forEachRemaining", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#forEachRemaining(x$1:java.util.function.Consumer[_>:E]):Unit", "kind" : "def"}, {"label" : "remove", "tail" : "(): Unit", "member" : "java.util.Iterator.remove", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#remove():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "openMultipleFiles", "tail" : "(vcfs: List[String]): MultiFileIterator", "member" : "pl.edu.pw.elka.mbi.MultiFileIterator.openMultipleFiles", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#openMultipleFiles(vcfs:List[String]):pl.edu.pw.elka.mbi.MultiFileIterator", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pl\/edu\/pw\/elka\/mbi\/MultiFileIterator.html", "kind" : "class"}, {"name" : "pl.edu.pw.elka.mbi.VcfSparkAdapter", "shortDescription" : "", "object" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html", "members_object" : [{"label" : "createDataFrame", "tail" : "(sparkSession: SparkSession, columns: List[String], vcfIterator: CloseableIterator[VariantContext], snpLimit: Int): DataFrame", "member" : "pl.edu.pw.elka.mbi.VcfSparkAdapter.createDataFrame", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#createDataFrame(sparkSession:org.apache.spark.sql.SparkSession,columns:List[String],vcfIterator:htsjdk.samtools.util.CloseableIterator[htsjdk.variant.variantcontext.VariantContext],snpLimit:Int):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "createDataFrame", "tail" : "(sparkSession: SparkSession, columns: List[String], vcfIterator: CloseableIterator[VariantContext]): DataFrame", "member" : "pl.edu.pw.elka.mbi.VcfSparkAdapter.createDataFrame", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#createDataFrame(sparkSession:org.apache.spark.sql.SparkSession,columns:List[String],vcfIterator:htsjdk.samtools.util.CloseableIterator[htsjdk.variant.variantcontext.VariantContext]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/VcfSparkAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "pl.edu.pw" : [], "pl.edu.pw.elka" : [], "sbt" : [], "pl.edu" : [], "pl.edu.pw.elka.mbi.rhm" : [{"name" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier", "shortDescription" : "Implementation of the RHM algorithm based outlier detection", "members_class" : [{"label" : "findOutliersFor", "tail" : "(subjects: DataFrame): Set[String]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier.findOutliersFor", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#findOutliersFor(subjects:org.apache.spark.sql.DataFrame):Set[String]", "kind" : "def"}, {"label" : "findOutliers", "tail" : "(): Set[String]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier.findOutliers", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#findOutliers():Set[String]", "kind" : "def"}, {"label" : "findOutliersStrictFor", "tail" : "(subjects: DataFrame): Set[String]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier.findOutliersStrictFor", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#findOutliersStrictFor(subjects:org.apache.spark.sql.DataFrame):Set[String]", "kind" : "def"}, {"label" : "findOutliersStrict", "tail" : "(): Set[String]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier.findOutliersStrict", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#findOutliersStrict():Set[String]", "kind" : "def"}, {"label" : "calculateAverageDistancesFor", "tail" : "(subjects: DataFrame): Map[String, Double]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier.calculateAverageDistancesFor", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#calculateAverageDistancesFor(subjects:org.apache.spark.sql.DataFrame):Map[String,Double]", "kind" : "def"}, {"label" : "calculateAverageDistances", "tail" : "(): Map[String, Double]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier.calculateAverageDistances", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#calculateAverageDistances():Map[String,Double]", "kind" : "def"}, {"label" : "outliersAlt", "tail" : ": Set[String]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier.outliersAlt", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#outliersAlt:Set[String]", "kind" : "lazy val"}, {"label" : "outliers", "tail" : ": Set[String]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier.outliers", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#outliers:Set[String]", "kind" : "lazy val"}, {"member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier#<init>", "error" : "unsupported entity"}, {"label" : "iterations", "tail" : ": Int", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifier.iterations", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#iterations:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifier.html", "kind" : "class"}, {"name" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite", "shortDescription" : "", "members_class" : [{"label" : "AssertionsHelper", "tail" : "", "member" : "org.scalatest.Assertions.AssertionsHelper", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#AssertionsHelperextendsAnyRef", "kind" : "class"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "verifySingleOutlierTestFindOutliers", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.verifySingleOutlierTestFindOutliers", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#verifySingleOutlierTestFindOutliers():Unit", "kind" : "def"}, {"label" : "verifySingleOutlierTestFindOutliersStrict", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.verifySingleOutlierTestFindOutliersStrict", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#verifySingleOutlierTestFindOutliersStrict():Unit", "kind" : "def"}, {"label" : "verifySingleOutlierCalculateAverageDistances", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.verifySingleOutlierCalculateAverageDistances", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#verifySingleOutlierCalculateAverageDistances():Unit", "kind" : "def"}, {"label" : "verifyTestFindOutliers", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.verifyTestFindOutliers", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#verifyTestFindOutliers():Unit", "kind" : "def"}, {"label" : "verifyTestFindOutliersStrict", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.verifyTestFindOutliersStrict", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#verifyTestFindOutliersStrict():Unit", "kind" : "def"}, {"label" : "verifyTestCalculateAverageDistances", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.verifyTestCalculateAverageDistances", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#verifyTestCalculateAverageDistances():Unit", "kind" : "def"}, {"label" : "verifyTrainFindOutliers", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.verifyTrainFindOutliers", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#verifyTrainFindOutliers():Unit", "kind" : "def"}, {"label" : "verifyTrainFindOutliersStrict", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.verifyTrainFindOutliersStrict", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#verifyTrainFindOutliersStrict():Unit", "kind" : "def"}, {"label" : "verifyTrainCalculateAverageDistances", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.verifyTrainCalculateAverageDistances", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#verifyTrainCalculateAverageDistances():Unit", "kind" : "def"}, {"label" : "initialize", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.initialize", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#initialize():Unit", "kind" : "def"}, {"label" : "outlierDataFrame", "tail" : ": DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.outlierDataFrame", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#outlierDataFrame:org.apache.spark.sql.DataFrame", "kind" : "var"}, {"label" : "testDataFrame", "tail" : ": DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.testDataFrame", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#testDataFrame:org.apache.spark.sql.DataFrame", "kind" : "var"}, {"label" : "trainDataFrame", "tail" : ": DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite.trainDataFrame", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#trainDataFrame:org.apache.spark.sql.DataFrame", "kind" : "var"}, {"member" : "pl.edu.pw.elka.mbi.rhm.RHMClassifierSuite#<init>", "error" : "unsupported entity"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: ⇒ Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: ⇒ T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "trap", "tail" : "(f: ⇒ T): Throwable", "member" : "org.scalatest.Assertions.trap", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#trap[T](f:=>T):Throwable", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertionsHelper", "tail" : ": AssertionsHelper", "member" : "org.scalatest.Assertions.assertionsHelper", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assertionsHelper:Assertions.this.AssertionsHelper", "kind" : "val"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMClassifierSuite.html", "kind" : "class"}, {"name" : "pl.edu.pw.elka.mbi.rhm.RHMIteration", "shortDescription" : "Class representing single iteration of the Resampling by half means algorithm.", "members_class" : [{"label" : "calculateDistanceFor", "tail" : "(subjectDistancesOnPositions: DataFrame): Map[String, Double]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.calculateDistanceFor", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#calculateDistanceFor(subjectDistancesOnPositions:org.apache.spark.sql.DataFrame):Map[String,Double]", "kind" : "def"}, {"label" : "calculateDistances", "tail" : "(): Map[String, Double]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.calculateDistances", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#calculateDistances():Map[String,Double]", "kind" : "def"}, {"label" : "calculateDistancesOnPositionsFor", "tail" : "(subjects: DataFrame): DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.calculateDistancesOnPositionsFor", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#calculateDistancesOnPositionsFor(subjects:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "calculateDistancesOnPositions", "tail" : "(): DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.calculateDistancesOnPositions", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#calculateDistancesOnPositions():org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "calculateScaledOccurrences", "tail" : "(): DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.calculateScaledOccurrences", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#calculateScaledOccurrences():org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "calculateStandardDeviations", "tail" : "(): DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.calculateStandardDeviations", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#calculateStandardDeviations():org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "calculateMeans", "tail" : "(): DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.calculateMeans", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#calculateMeans():org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "aggregateOccurrences", "tail" : "(source: DataFrame): DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.aggregateOccurrences", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#aggregateOccurrences(source:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "sampleData", "tail" : "(source: DataFrame): DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.sampleData", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#sampleData(source:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "distancesOnPositions", "tail" : ": DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.distancesOnPositions", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#distancesOnPositions:org.apache.spark.sql.DataFrame", "kind" : "lazy val"}, {"label" : "trainDistances", "tail" : ": Map[String, Double]", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.trainDistances", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#trainDistances:Map[String,Double]", "kind" : "lazy val"}, {"label" : "sampleData", "tail" : ": DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.sampleData", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#sampleData:org.apache.spark.sql.DataFrame", "kind" : "lazy val"}, {"member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration#<init>", "error" : "unsupported entity"}, {"label" : "trainData", "tail" : ": DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.trainData", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#trainData:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "iteration", "tail" : ": Int", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIteration.iteration", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#iteration:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIteration.html", "kind" : "class"}, {"name" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite", "shortDescription" : "", "members_class" : [{"label" : "AssertionsHelper", "tail" : "", "member" : "org.scalatest.Assertions.AssertionsHelper", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#AssertionsHelperextendsAnyRef", "kind" : "class"}, {"label" : "CheckingEqualizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.CheckingEqualizer", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#CheckingEqualizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "Equalizer", "tail" : "", "member" : "org.scalactic.TripleEqualsSupport.Equalizer", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#Equalizer[L<:<?>]extendsAnyRef", "kind" : "class"}, {"label" : "verifyCalculateDistances", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite.verifyCalculateDistances", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#verifyCalculateDistances():Unit", "kind" : "def"}, {"label" : "verifyCalculateDistancesOnPositions", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite.verifyCalculateDistancesOnPositions", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#verifyCalculateDistancesOnPositions():Unit", "kind" : "def"}, {"label" : "verifyCalculateScaledOccurrences", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite.verifyCalculateScaledOccurrences", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#verifyCalculateScaledOccurrences():Unit", "kind" : "def"}, {"label" : "verifyCalculateStandardDeviations", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite.verifyCalculateStandardDeviations", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#verifyCalculateStandardDeviations():Unit", "kind" : "def"}, {"label" : "verifyCalculateMeans", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite.verifyCalculateMeans", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#verifyCalculateMeans():Unit", "kind" : "def"}, {"label" : "verifyAggregateOccurrences", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite.verifyAggregateOccurrences", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#verifyAggregateOccurrences():Unit", "kind" : "def"}, {"label" : "initialize", "tail" : "(): Unit", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite.initialize", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#initialize():Unit", "kind" : "def"}, {"label" : "testDataFrame", "tail" : ": DataFrame", "member" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite.testDataFrame", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#testDataFrame:org.apache.spark.sql.DataFrame", "kind" : "var"}, {"member" : "pl.edu.pw.elka.mbi.rhm.RHMIterationSuite#<init>", "error" : "unsupported entity"}, {"label" : "succeed", "tail" : ": Assertion", "member" : "org.scalatest.Assertions.succeed", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#succeed:org.scalatest.Assertion", "kind" : "final val"}, {"label" : "pendingUntilFixed", "tail" : "(f: ⇒ Unit)(pos: Position): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pendingUntilFixed", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#pendingUntilFixed(f:=>Unit)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "pending", "tail" : "(): Assertion with PendingStatement", "member" : "org.scalatest.Assertions.pending", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#pending:org.scalatest.Assertionwithorg.scalatest.PendingStatement", "kind" : "def"}, {"label" : "withClue", "tail" : "(clue: Any)(fun: ⇒ T): T", "member" : "org.scalatest.Assertions.withClue", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#withClue[T](clue:Any)(fun:=>T):T", "kind" : "def"}, {"label" : "cancel", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#cancel(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#cancel(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#cancel(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "cancel", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.cancel", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#cancel()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#fail(cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String, cause: Throwable)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#fail(message:String,cause:Throwable)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "(message: String)(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#fail(message:String)(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "fail", "tail" : "()(pos: Position): Nothing", "member" : "org.scalatest.Assertions.fail", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#fail()(implicitpos:org.scalactic.source.Position):Nothing", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assertResult(expected:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "assertResult", "tail" : "(expected: Any, clue: Any)(actual: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertResult", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assertResult(expected:Any,clue:Any)(actual:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "trap", "tail" : "(f: ⇒ T): Throwable", "member" : "org.scalatest.Assertions.trap", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#trap[T](f:=>T):Throwable", "kind" : "def"}, {"label" : "assertThrows", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertThrows", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assertThrows[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "def"}, {"label" : "intercept", "tail" : "(f: ⇒ Any)(classTag: ClassTag[T], pos: Position): T", "member" : "org.scalatest.Assertions.intercept", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#intercept[T<:AnyRef](f:=>Any)(implicitclassTag:scala.reflect.ClassTag[T],implicitpos:org.scalactic.source.Position):T", "kind" : "def"}, {"label" : "assertCompiles", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertCompiles", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assertCompiles(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertDoesNotCompile", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertDoesNotCompile", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assertDoesNotCompile(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertTypeError", "tail" : "(code: String)(pos: Position): Assertion", "member" : "org.scalatest.Assertions.assertTypeError", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assertTypeError(code:String)(implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assume(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assume", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assume", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assume(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assert", "tail" : "(condition: Boolean, clue: Any)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assert(condition:Boolean,clue:Any)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "assertionsHelper", "tail" : ": AssertionsHelper", "member" : "org.scalatest.Assertions.assertionsHelper", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assertionsHelper:Assertions.this.AssertionsHelper", "kind" : "val"}, {"label" : "assert", "tail" : "(condition: Boolean)(prettifier: Prettifier, pos: Position): Assertion", "member" : "org.scalatest.Assertions.assert", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#assert(condition:Boolean)(implicitprettifier:org.scalactic.Prettifier,implicitpos:org.scalactic.source.Position):org.scalatest.Assertion", "kind" : "macro def"}, {"label" : "convertEquivalenceToBToAConversionConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConversionConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#convertEquivalenceToBToAConversionConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "conversionCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], cnv: (B) ⇒ A): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.conversionCheckedConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#conversionCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitcnv:B=>A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConversionConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConversionConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#convertEquivalenceToAToBConversionConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityConversionCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], cnv: (A) ⇒ B): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityConversionCheckedConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#lowPriorityConversionCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitcnv:A=>B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToBToAConstraint", "tail" : "(equivalenceOfA: Equivalence[A])(ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToBToAConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#convertEquivalenceToBToAConstraint[A,B](equivalenceOfA:org.scalactic.Equivalence[A])(implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "typeCheckedConstraint", "tail" : "(equivalenceOfA: Equivalence[A], ev: <:<[B, A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.typeCheckedConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#typeCheckedConstraint[A,B](implicitequivalenceOfA:org.scalactic.Equivalence[A],implicitev:B<:<A):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "convertEquivalenceToAToBConstraint", "tail" : "(equivalenceOfB: Equivalence[B])(ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.convertEquivalenceToAToBConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#convertEquivalenceToAToBConstraint[A,B](equivalenceOfB:org.scalactic.Equivalence[B])(implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "lowPriorityTypeCheckedConstraint", "tail" : "(equivalenceOfB: Equivalence[B], ev: <:<[A, B]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.lowPriorityTypeCheckedConstraint", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#lowPriorityTypeCheckedConstraint[A,B](implicitequivalenceOfB:org.scalactic.Equivalence[B],implicitev:A<:<B):org.scalactic.CanEqual[A,B]", "kind" : "def"}, {"label" : "unconstrainedEquality", "tail" : "(equalityOfA: Equality[A]): CanEqual[A, B]", "member" : "org.scalactic.TripleEquals.unconstrainedEquality", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#unconstrainedEquality[A,B](implicitequalityOfA:org.scalactic.Equality[A]):org.scalactic.CanEqual[A,B]", "kind" : "implicit def"}, {"label" : "convertToCheckingEqualizer", "tail" : "(left: T): CheckingEqualizer[T]", "member" : "org.scalactic.TripleEquals.convertToCheckingEqualizer", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#convertToCheckingEqualizer[T](left:T):TripleEquals.this.CheckingEqualizer[T]", "kind" : "def"}, {"label" : "convertToEqualizer", "tail" : "(left: T): Equalizer[T]", "member" : "org.scalactic.TripleEquals.convertToEqualizer", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#convertToEqualizer[T](left:T):TripleEquals.this.Equalizer[T]", "kind" : "implicit def"}, {"label" : "!==", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#!==[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Spread[T]): TripleEqualsInvocationOnSpread[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#===[T](right:org.scalactic.TripleEqualsSupport.Spread[T]):org.scalactic.TripleEqualsSupport.TripleEqualsInvocationOnSpread[T]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#!==(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "===", "tail" : "(right: Null): TripleEqualsInvocation[Null]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#===(right:Null):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[Null]", "kind" : "def"}, {"label" : "!==", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.!==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#!==[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "===", "tail" : "(right: T): TripleEqualsInvocation[T]", "member" : "org.scalactic.TripleEqualsSupport.===", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#===[T](right:T):org.scalactic.TripleEqualsSupport.TripleEqualsInvocation[T]", "kind" : "def"}, {"label" : "defaultEquality", "tail" : "(): Equality[A]", "member" : "org.scalactic.TripleEqualsSupport.defaultEquality", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#defaultEquality[A]:org.scalactic.Equality[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "pl\/edu\/pw\/elka\/mbi\/rhm\/RHMIterationSuite.html", "kind" : "class"}], "pl" : []};